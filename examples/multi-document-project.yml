# examples/multi-document-project.yml
# Example: Building multiple documents from a single repository
# Use this when you have thesis + slides, or multiple papers

name: Build All Documents

on:
  push:
    branches: [main, release]
  pull_request:
    branches: [main]

jobs:
  build-thesis:
    name: Build Thesis
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Build thesis
        id: thesis
        uses: AlaCodon/latexonfly@main
        with:
          entry_tex: "thesis.tex"
          working_directory: "thesis"
          engine: "xelatex"                   # Thesis often needs XeLaTeX for fonts
          texlive_scheme: "full"              # Thesis may need many packages
          timeout_minutes: "45"               # Longer timeout for complex thesis

  build-slides:
    name: Build Presentation Slides
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Build slides
        id: slides
        uses: AlaCodon/latexonfly@main
        with:
          entry_tex: "slides.tex"
          working_directory: "slides"
          engine: "pdflatex"                  # Slides usually fine with pdflatex

  build-poster:
    name: Build Conference Poster
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Build poster
        id: poster
        uses: AlaCodon/latexonfly@main
        with:
          entry_tex: "poster.tex"
          working_directory: "poster"
          engine: "lualatex"                  # Poster might need LuaLaTeX

  # Release only the thesis with custom tagging
  release-thesis:
    if: github.ref == 'refs/heads/main'
    needs: build-thesis
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Download thesis PDF
        uses: actions/download-artifact@v4.1.8
        with:
          name: latex-pdfs
          path: ./thesis-pdfs

      - name: Create thesis release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="thesis-$(date -u +'%Y%m%d-%H%M%S')-${GITHUB_SHA::7}"
          TITLE="$(git log -1 --pretty=%s)"
          
          cd thesis-pdfs
          if ls *.pdf 1> /dev/null 2>&1; then
            # Rename PDFs with thesis prefix
            for f in *.pdf; do
              mv "$f" "thesis-$f"
            done
            
            gh release create "$TAG" \
              --title "Thesis: $TITLE" \
              --target "$GITHUB_SHA" \
              --generate-notes \
              --latest \
              *.pdf
          fi

  # Optional: Combine all PDFs into a single release
  create-combined-release:
    name: Create Combined Release
    needs: [build-thesis, build-slides, build-poster]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only on main branch
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "*-pdf"
          merge-multiple: true

      - name: Create combined release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="combined-$(date -u +'%Y%m%d-%H%M%S')-${GITHUB_SHA::7}"
          gh release create "$TAG" \
            --title "Complete Document Set - $(date -u +'%Y-%m-%d %H:%M')" \
            --target "$GITHUB_SHA" \
            --generate-notes \
            *.pdf
