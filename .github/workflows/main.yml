# .github/workflows/main.yml
name: Release PDF on Tag

# This workflow runs automatically when you push a new tag that starts with 'v'
# For example: v1.0, v1.1.0, v2.0-beta
on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_release:
    name: Build and Release PDF
    runs-on: ubuntu-latest

    # Grant permissions for the GITHUB_TOKEN to create a release
    permissions:
      contents: write

    steps:
      # Step 1: Check out the repository's code so the workflow can access it
      - name: Check out repository
        uses: actions/checkout@v5

      # Step 1: Set up Docker Buildx (required for caching)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 2: Pull and cache the LaTeX image using its digest
      - name: Pull and cache LaTeX image
        uses: docker/build-push-action@v6
        with:
          # Use an inline Dockerfile that just pulls the remote image
          # We use the specific digest (@sha256:...) for perfect caching
          file: ./Dockerfile.latex
          # Load the image so the next step can use it
          load: true
          # Give the loaded image a simple, predictable name
          tags: latex-image:latest
          # Define the cache source and destination
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }},mode=max

      # Step 3: Compile the LaTeX document using the cached image
      - name: Compile LaTeX document
        run: |
          docker run --rm \
            --workdir /github/workspace \
            -v "${{ github.workspace }}":/github/workspace \
            latex-image:latest \
            latexmk -pdf -file-line-error -halt-on-error -interaction=nonstopmode main.tex

      - name: Rename PDF with Tag
        run: |
          mv main.pdf main-${{ github.ref_name }}.pdf

      # Step 3: Create a GitHub Release and upload the compiled PDF as an asset
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
          --generate-notes \
          --title "Release ${{ github.ref_name }}" \
          main-${{ github.ref_name }}.pdf
